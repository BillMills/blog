---
layout: post
title:  "Start Something: Emerging Communities of Practice in Vancouver"
date:   2015-02-03
---

*This post originally appeared on the Mozilla Science Lab's blog.*

I had a great time teaching Software Carpentry in the Earth and Ocean Science department at UBC last week - as always, I learned a lot from the experience and from my students, and have some ideas for what I'd like to do next time. But what really struck me, were the grassroots actions on coding in the sciences that are happening in Vancouver; a community of practice is beginning to assemble itself along several different avenues.

<h3>The Earth &amp; Ocean Science Coding Study Group</h3>

While I was on campus, <a href="http://www.eos.ubc.ca/about/faculty/S.Allen.html" target="_blank">Susan Allen</a> did me the honor of inviting me to sit in on her department's study group meeting for coding practice. The format was simple and casual: a one hour meeting, once every two weeks, where a volunteer from the department would give a hands-on tutorial of a tool they use in their own practice. When I attended, <a href="https://twitter.com/volcanokathi" target="_blank">Kathi Unglert</a> walked us through the basics of awk and sed; there weren't more than ten students in the room, and almost all of them were from the same department.

Much like when I teach Software Carpentry, the lecture paused often to let learners try things out, and proceeded at a pace the room was comfortable with. But the experience was also very different from a workshop environment; its small class size of people at least loosely familiar with each other and one hour duration helped Kathi create a very casual, relaxed and social environment, that felt more like friendly cooperation and less like the theatrical quality of a bigger event. Everyone could speak and be heard if they liked, and the scope was small enough for the lesson to be digestible at an amenable pace in a single sitting.

The Earth &amp; Ocean Science coding study group was started after another Software Carpentry workshop last year, by department members eager to keep sharing similar skills, and I think the relaxed and familiar formula they found is just right for the next step after a workshop. In order for all these technical skills to stick, people need to keep practicing them, and they need to be in an environment that supports that exploration and practice; but in order to sustain those practices long term, they need to be low-pressure and low-barrier, which this study group model has done a fine job of realizing.

<h3>Hacky Hour and Other Meetups</h3>

After the Software Carpentry workshop, I threw Vancouver's first Hacky Hour at a pub at UBC. Hacky Hours got started by our <a href="http://resbaz.tumblr.com/about" target="_blank">friends</a> at the University of Melbourne as a casual meetup for students, scientists and researchers to get together and talk about how they use code and handle data, get help with their bugs and problems, and meet new friends and colleagues. An informal user-group style get-together is something that I've wanted to do more of in the collaborative research coding space, so I was eager to give it a try, and I think it was a big success.

I think one of the biggest hurdles in the open science space is discoverability &amp; making connections. We're all doing interesting work with plenty of overlaps, but it can be difficult to find those overlaps and know where to go to get support (technical and moral) from a community of peers. When I was chatting with him about how his community does Hacky Hours, <a href="https://twitter.com/DrClimate" target="_blank">Damien Irving </a>described the events as opportunities for scientist-coders to make themselves available to one another, and available for the discussions that lead to collaboration, discovery and support.

I <a href="http://wp.mozillascience.org/worries-critical-mass/" target="_blank">wrote about</a> the tremendous power of live events to defeat the discoverability problem in research coding, as a response to <a href="http://nceas.github.io/open-science-codefest/" target="_blank">NCEAS' Codefest</a> last year in Santa Barbra, and the same appears to be true at an event like a Hacky Hour. Even at our very first event (which was a relatively impromptu affair), discussions among the mix of people that came revealed that web development and bioinformatics have some surprising overlaps; there are some excellent <a href="http://biopython.org/wiki/Biopython" target="_blank">packages</a> out there that may solve big chunks of one of the <a href="http://collaborate.mozillascience.org/" target="_blank">Collaborate</a> projects; and <em>everyone</em> in genomics has a funny story about the microbiome. We also learned about <a href="http://vanbug.org/" target="_blank">VanBUG</a>, a bioinformatics user group here in Vancouver accomplishing similar community building activities, who I'd like to drop in on soon; once again, the simple act of sitting around a table together made the discoverability problem evaporate.

<h3>What About My Town?</h3>

I'm really inspired by the great grassroots stirrings that are going on in Vancouver right now; these sorts of welcoming, low-barrier community events create opportunities for people to learn and share and jump on board with what their colleagues are doing, and feel like the beginnings of a groundswell movement. Luckily, both study groups and meetups are not so hard to get started in your own town or institution.

For study groups, start in your own department or even lab group with an easy schedule; a one hour tutorial once or twice a month among peers is fantastic. For material, the lesson leader should pick something they're familiar with, and use in their every day practice; this makes it easy for them to come up with a lesson, and with examples that will be relevant to the audience. Make sure to keep the lesson hands-on, casually paced and driven by opportunities for practice. You can check out <a href="https://github.com/mozillascience/studyGroupLessons/blob/master/awk/lesson.md">Kathi's lesson on awk</a> in our new <a href="https://github.com/mozillascience/studyGroupLessons" target="_blank">repository</a> for an excellent example. I'd like to start compiling a collection of these one-hour lessons, for others to re-use; please, send us a pull request with your lessons, or send them to me at bill@mozillafoundation.org.

For Hacky Hours, simpler is better - a meetup on campus or somewhere else easy for your community to drop in is best, at a pub or cafe to promote a relaxed atmosphere. The key to a good hacky hour is availability and interaction; encourage people with questions and interests in research coding to come and meet one another, and bring what they're working on to discuss it and perhaps even collaborate a bit. Surprising and fruitful connections begin emerging, even in small groups. For an example of organizing a hacky hour, see the <a href="http://forum.mozillascience.org/t/vancouver-hacky-hour-meetup/195/1" target="_blank">Vancouver thread</a> on the Mozilla Science Forum, and feel free to start your own there, too!

I'll be sharing more ideas on study groups and hacky hour meetups as we do more of them here in Vancouver - please, post your own ideas and experiences in the comments or on the <a href="http://forum.mozillascience.org/" target="_blank">forum</a>, and let us know how it goes!